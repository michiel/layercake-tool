on:
  release:
    types: [created]

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu

          - os-name: windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          # - os-name: macos-x86_64
          #   runs-on: macOS-latest
          #   target: x86_64-apple-darwin

          - os-name: macos-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install frontend dependencies
        run: npm run frontend:install
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libglib2.0-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libwebkit2gtk-4.1-dev \
            pkg-config
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
          force-use-cross: false
      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0" --locked
      - name: Build Tauri desktop bundle
        shell: bash
        run: |
          set -euo pipefail
          pushd src-tauri >/dev/null
          cargo tauri build
          popd >/dev/null
      - name: Collect Tauri artifacts
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p tauri-dist
          case "${{ matrix.platform.os-name }}" in
            linux-*)
              find src-tauri/target/release/bundle -type f \( -name '*.AppImage' -o -name '*.deb' -o -name '*.rpm' -o -name '*.tar.gz' \) -print -exec cp {} tauri-dist/ \;
              ;;
            windows-*)
              find src-tauri/target/release/bundle -type f \( -name '*.msi' -o -name '*.exe' \) -print -exec cp {} tauri-dist/ \;
              ;;
            macos-*)
              find src-tauri/target/release/bundle -type f \( -name '*.dmg' -o -name '*.pkg' \) -print -exec cp {} tauri-dist/ \;
              app_path=$(find src-tauri/target/release/bundle/macos -maxdepth 1 -type d -name '*.app' | head -n 1)
              if [[ -n "$app_path" ]]; then
                base_name="$(basename "$app_path" .app)"
                zip_name="${base_name}-${{ matrix.platform.os-name }}-${{ github.event.release.tag_name }}.zip"
                (cd "$(dirname "$app_path")" && ditto -c -k --keepParent "${base_name}.app" "${GITHUB_WORKSPACE}/tauri-dist/${zip_name}")
              fi
              ;;
          esac
          ls -la tauri-dist
      - name: Upload Tauri bundles to release
        uses: softprops/action-gh-release@v2
        with:
          files: tauri-dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: layercake
          target: ${{ matrix.platform.target }}
          changes-file: "CHANGES.md"
          archive-name: "layercake-${{ github.event.release.tag_name }}-${{ matrix.platform.os-name }}"
